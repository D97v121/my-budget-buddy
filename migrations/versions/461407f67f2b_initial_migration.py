"""Initial migration

Revision ID: 461407f67f2b
Revises: 
Create Date: 2025-07-25 10:25:00.821656

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '461407f67f2b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('plaid_category', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('bank_account', sa.String(), nullable=True),
    sa.Column('account_id', sa.String(), nullable=True),
    sa.Column('pending', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('division', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('item_id', sa.String(length=255), nullable=True),
    sa.Column('ai_division_guess', sa.String(length=20), nullable=True),
    sa.Column('ai_division_accepted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('hash', sa.String(length=80), nullable=False),
    sa.Column('username', sa.String(length=120), nullable=False),
    sa.Column('savePercentage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('spendPercentage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('investPercentage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expensePercentage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('givePercentage', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ai_categorization_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('ai_guess', sa.String(length=20), nullable=True),
    sa.Column('user_division', sa.String(length=20), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('money',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('save', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('spend', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('give', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('invest', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expense', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plaid_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(length=255), nullable=False),
    sa.Column('access_token', sa.String(length=255), server_default='', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('cursor', sa.String(), nullable=True),
    sa.Column('institution_id', sa.String(), nullable=True),
    sa.Column('institution_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('save',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('root', sa.String(length=120), nullable=False),
    sa.Column('tag', sa.String(length=30), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_color',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('color_name', sa.String(length=50), nullable=False),
    sa.Column('color_hex', sa.String(length=7), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('color_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['color_id'], ['tag_color.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='_user_tag_uc')
    )
    op.create_table('transaction_tags',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_tags')
    op.drop_table('tags')
    op.drop_table('tag_color')
    op.drop_table('save')
    op.drop_table('plaid_item')
    op.drop_table('note')
    op.drop_table('money')
    op.drop_table('goal')
    op.drop_table('ai_categorization_log')
    op.drop_table('user')
    op.drop_table('transactions')
    # ### end Alembic commands ###
